// module 6

#define white vec3(1.0)
#define black vec3(0.0)
#define red vec3(1.0, 0.0, 0.0)

vec3 makeCircle(vec2 uv, vec2 pos, float radius, float blur, vec3 color, bool isPulsing)
{
    float circle = 0.0;
    
    if(isPulsing)
    {
        circle = smoothstep(
                            radius, 
                            (sin(iTime * 7.0) / 2.0 * radius) + 0.1 + radius + blur, 
                            distance(uv, pos)
                          );
    }
    else
    {
        circle = smoothstep(
                            radius,
                            radius + blur, 
                            distance(uv, pos)
                          );
    }
    
    return (1.0 - circle) * color;
}

void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
    float ratio = iResolution.y / iResolution.x; // resolution
    vec2 uv = fragCoord/iResolution.xy;
    uv.x /= ratio;
    
    //ps09
    //a
    /*
    vec2 pos = vec2(0.5 / ratio, 0.5);
    float radius = 0.2;
    
    float f = step(
                    radius, 
                    distance(uv, pos)
                  ); 
                  //calcualtes distance between all points and the position, 
                  //then step will show if it is within the radius of the position
    
    vec3 col = vec3(f);
    fragColor = vec4(col, 1.0);
    */
    
    //b
    /*
    vec2 pos = vec2(0.5 / ratio, 0.5);
    float radius = 0.2;
    
    float f = step(
                    radius, 
                    distance(uv, pos)
                  );
    
    vec3 col = 1.0 - vec3(f);
    fragColor = vec4(col, 1.0);
    */
    
    //c
    /*
    float blur = 0.01;
    vec2 pos = vec2(0.5 / ratio, 0.5);
    float radius = 0.2;
    
    float f = smoothstep(
                    radius,
                    radius + blur, 
                    distance(uv, pos)
                  );
    
    vec3 col = vec3(f);
    fragColor = vec4(col, 1.0);
    */
    
    //d
    /*
    vec3 circle = makeCircle(
                                uv,
                                vec2(0.5 / ratio, 0.5), //position
                                0.2, //radius
                                0.01, //blur
                                white, //color
                                false); //is pulsing
    
    fragColor = vec4(circle, 1.0);
    */
    
    //e
    /*
    vec3 circle = makeCircle(
                                uv, 
                                vec2(0.5 / ratio, 0.5), //position
                                0.22, //radius
                                0.01, //blur
                                red, //color
                                true); //is pulsing
    
    fragColor = vec4(circle, 1.0);
    */
    
    //f
    /*
    vec3 circle1 = makeCircle(
                                uv, 
                                vec2(0.5 / ratio, 0.5), //position
                                0.05, //radius
                                0.01, //blur
                                red, //color
                                true); //is pulsing
                                
    vec3 circle2 = makeCircle(
                                uv, 
                                vec2(0.2 / ratio, 0.7), //position
                                0.05, //radius
                                0.01, //blur
                                red, //color
                                true); //is pulsing
                                
    vec3 circle3 = makeCircle(
                                uv, 
                                vec2(0.8 / ratio, 0.3), //position
                                0.05, //radius
                                0.01, //blur
                                red, //color
                                true); //is pulsing
                                
    vec3 circle4 = makeCircle(
                                uv, 
                                vec2(0.8 / ratio, 0.7), //position
                                0.05, //radius
                                0.01, //blur
                                red, //color
                                true); //is pulsing
                                
    vec3 circle5 = makeCircle(
                                uv, 
                                vec2(0.2 / ratio, 0.3), //position
                                0.05, //radius
                                0.01, //blur
                                red, //color
                                true); //is pulsing
                                
    vec3 finalCircles = circle1 + circle2 + circle3 + circle4 + circle5;
    
    fragColor = vec4(finalCircles, 1.0);
    */
    
    //g
    /*
    vec2 pos = vec2(0.5 / ratio, 0.5);
    float radius = 0.1;
    float blur = 0.01;
    */
    
    //1
    /*
    vec3 circle1 = makeCircle(
                                uv, 
                                vec2(0.5 / ratio, 0.5), //position
                                0.15, //radius
                                0.01, //blur
                                red, //color
                                true); //is pulsing
    
    
    circle1 *= distance(uv, vec2(0.4 / ratio, 0.4)) + distance(uv, vec2(0.6 / ratio, 0.6));
    circle1 /= distance(uv, vec2(0.4 / ratio, 0.4)) * distance(uv, vec2(0.6 / ratio, 0.6));
    
    vec3 color = sin((circle1) * iTime / 2.0) * white;
    
    fragColor = vec4(color, 1.0);
    */
    
    //2
    /*
    vec3 circle1 = makeCircle(
                                uv, 
                                vec2(0.5 / ratio, 0.5), //position
                                0.22, //radius
                                0.05, //blur
                                red, //color
                                true); //is pulsing
                                
    circle1 *= min(distance(uv, vec2(0.4 / ratio, 0.4)), distance(uv, vec2(0.6 / ratio, 0.6)));
    circle1 /= max(distance(uv, vec2(0.4 / ratio, 0.4)), distance(uv, vec2(0.6 / ratio, 0.6)));
    circle1 *= pow(distance(uv, vec2(0.4 / ratio, 0.4)), distance(uv, vec2(0.6 / ratio, 0.6)));
    
    vec3 circle2 = makeCircle(
                                uv, 
                                vec2(0.3 / ratio, 0.5), //position
                                0.22, //radius
                                0.05, //blur
                                white, //color
                                false); //is pulsing
                                
    circle2 += min(distance(uv, vec2(0.4 / ratio, 0.4)), distance(uv, vec2(0.6 / ratio, 0.6)));
    circle2 *= max(distance(uv, vec2(0.4 / ratio, 0.4)), distance(uv, vec2(0.6 / ratio, 0.6)));
    circle2 /= pow(distance(uv, vec2(0.4 / ratio, 0.4)), distance(uv, vec2(0.6 / ratio, 0.6)));
    
    vec3 circle3 = makeCircle(
                                uv, 
                                vec2(0.7 / ratio, 0.5), //position
                                0.22, //radius
                                0.05, //blur
                                white, //color
                                false); //is pulsing
                                
    circle3 += min(distance(uv, vec2(0.4 / ratio, 0.4)), distance(uv, vec2(0.6 / ratio, 0.6)));
    circle3 *= max(distance(uv, vec2(0.4 / ratio, 0.4)), distance(uv, vec2(0.6 / ratio, 0.6)));
    circle3 /= pow(distance(uv, vec2(0.4 / ratio, 0.4)), distance(uv, vec2(0.6 / ratio, 0.6)));
    
    vec3 color = (circle1 / sin(iTime * uv.x) / 3.0) - (circle2 / circle3);
    
    fragColor = vec4(color, 1.0);
    */
    
    //3
    /*
    vec3 circle1 = makeCircle(
                                uv, 
                                vec2(0.5 / ratio, 0.5), //position
                                0.25, //radius
                                0.01, //blur
                                red, //color
                                false); //is pulsing
                                
    circle1 /= distance(uv, vec2(0.4 / ratio, 0.4)) * distance(uv, vec2(0.6 / ratio, 0.6));
    
    vec3 circle2 = makeCircle(
                                uv, 
                                vec2(0.5 / ratio, 0.5), //position
                                0.2, //radius
                                0.05, //blur
                                red, //color
                                true); //is pulsing
                                
    circle2 -= pow(distance(uv, vec2(0.4 / ratio, 0.4)), distance(uv, vec2(0.6 / ratio, 0.6)));
    
    vec3 color = (circle1 - (circle2 * 50.0)) * red * sin(iTime);
    
    fragColor = vec4(color, 1.0);
    */
    
    //ps10
    /*
    vec2 pos = vec2(0.5 / ratio, 0.5);
    
    float angle = atan(uv.y - pos.y, uv.x - pos.x);
    
    vec3 circle1 = makeCircle(
                                uv, 
                                pos, //position
                                0.3 * sqrt(acos(cos(angle * 8.0))) * abs(tan(iTime)), //radius
                                0.01, //blur
                                white, //color
                                false); //is pulsing
                                
    vec3 circle2 = makeCircle(
                                uv, 
                                pos, //position
                                0.3 * sqrt(acos(cos(angle * 8.0))), //radius
                                0.01, //blur
                                white, //color
                                false); //is pulsing
    
    vec3 circle3 = makeCircle(
                                uv, 
                                pos, //position
                                0.03, //radius
                                0.01, //blur
                                white, //color
                                false); //is pulsing
                                
    vec3 circle4 = makeCircle(
                                uv, 
                                pos, //position
                                abs(cos(angle * 5.0) / sin(iTime) * sin(angle * 5.0)) * sin(-0.9 / 2.0) + 0.25, //radius
                                0.01, //blur
                                red, //color
                                false); //is pulsing
                                
    vec3 circle5 = makeCircle(
                                uv, 
                                pos, //position
                                abs(cos(angle * 12.0) / sin(iTime) * sin(angle * 3.0)) * sin(-0.9 / 2.0) + 0.25, //radius
                                0.01, //blur
                                white, //color
                                false); //is pulsing
    
    vec3 color = clamp(circle1 + 0.0, 0.0, 1.0) - circle3 + circle4 - circle5;
    fragColor = vec4(color, 1.0);
    */
}
